import type { Metadata } from 'next'
import { Noto_Sans_KR } from 'next/font/google'
import './globals.css'

const notoSansKr = Noto_Sans_KR({ subsets: ['latin'] })

// 아무래도 메타데이터를 서버컴포넌트에 넣는 것이 SEO에 좋아보인다.
export const metadata: Metadata = {
  title: 'NextJS14-Example',
  description: 'Generated by create next app',
}

/**
 *
 * Routing => [Routing Fundamentals]#File Conventions
 *
 *
 * 1. 앱 라우터에서는 tree단위나 각 세그먼트단위에서 특정 동작을 하는 특수 파일들을 제공한다.
 *    기본적으로 layout과 page이 제공되며, 특히 Root경로의 layout 특수 파일은 이전의 document파일과 같이 html, body요소를 생성하는 역할을 한다.
 *
 *    ref : https://nextjs.org/docs/app/building-your-application/routing#file-conventions
 *
 * 2. 각 스페셜 파일들은 렌더링 시 아래와 같이 정해진 위계대로 렌더링된다.
 *
 *    <Layout>
 *      <Template>
 *        <ErrorBoundary fallback={<Error />}>
 *          <Suspense fallback={<Loading />}>
 *            <ErrorBoundary fallback={<NotFound />}>
 *              <Page />
 *            </ErrorBoundary>
 *          </Suspense>
 *        </ErrorBoundary>
 *      </Template>
 *    </Layout>
 *
 *    ref : https://nextjs.org/docs/app/building-your-application/routing#component-hierarchy
 *
 *
 * ref : https://nextjs.org/docs/app/building-your-application/routing
 *
 * */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en">
      <body className={notoSansKr.className}>{children}</body>
    </html>
  )
}
